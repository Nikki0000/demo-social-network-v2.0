{"version":3,"sources":["сomponents/Book section/BookDetails.module.css","сomponents/common/Paginator/Paginator.module.css","assets/images/user.png","сomponents/ToDoList/Tasks/tasks.module.css","сomponents/ToDoList/Task/task.module.css","сomponents/Profile/MyPosts/MyPosts.module.css","сomponents/Profile/MyPosts/Post/Post.module.css","сomponents/Profile/Profile.module.css","сomponents/Users/users.module.css","сomponents/ToDoList/Header/todoheader.module.css","assets/images/Spinner-1s-200px.svg","сomponents/Header/Header.module.css","сomponents/News/News.jsx","redux/dialogs-reducer.ts","сomponents/Dialogs/DialogItem/DialogItem.tsx","сomponents/Dialogs/Message/Message.tsx","сomponents/common/FormControl/FormsControls.tsx","utils/validators/validators.ts","сomponents/Dialogs/Dialogs.tsx","api/hoc/withAuthRedirect.tsx","api/api.ts","сomponents/Dialogs/DialogsContainer.tsx","api/profile-api.ts","redux/profile-reducer.ts","сomponents/Profile/MyPosts/Post/Post.tsx","сomponents/Profile/MyPosts/MyPosts.tsx","сomponents/Profile/MyPosts/MyPostsContainer.tsx","сomponents/common/preloader/Preloader.tsx","сomponents/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","сomponents/Profile/ProfileInfo/ProfileDataForm.tsx","сomponents/Profile/ProfileInfo/ProfileInfo.tsx","сomponents/Profile/Profile.tsx","сomponents/Profile/ProfileContainer.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","сomponents/Login/Login.tsx","redux/app-reducer.ts","сomponents/Book section/HeaderBookSection.jsx","сomponents/Book section/BookList.jsx","сomponents/Book section/BookDetails.jsx","сomponents/Book section/BookSection.jsx","redux/users-selectors.ts","сomponents/common/Paginator/Paginator.tsx","сomponents/Users/User.tsx","сomponents/Users/UsersSearchForm.tsx","api/users-api.ts","redux/users-reducer.ts","сomponents/Users/Users.tsx","сomponents/Users/UsersContainer.tsx","redux/auth-selectors.ts","сomponents/Header/Header.tsx","сomponents/ToDoList/Header/TodoHeader.jsx","сomponents/ToDoList/Task/Task.jsx","сomponents/ToDoList/Tasks/TaskList.jsx","сomponents/ToDoList/Todolist.jsx","App.tsx","reportWebVitals.js","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","сomponents/common/FormControl/FormsControls.module.css","сomponents/Profile/ProfileInfo/ProfileInfo.module.css","сomponents/Book section/BookSection.module.css","сomponents/Dialogs/Dialogs.module.css"],"names":["module","exports","bookContainer","headerDetailsBlock","headerDetailsBlockText","descriptionBlock","selectedPage","pages","__webpack_require__","p","tasks","header","textPurple","list","task","textCompleted","checkContainer","deleteButton","postsBlock","posts","postElement","item","postText","postBorder","profileInfoBlock","postBlock","profileAll","userPhoto","userBlock","newTaskForm","h1","img1","loginBlock","head","News","props","react_default","a","createElement","initialState","messagesData","id","message","dialogsData","name","dialogsReducer","state","arguments","length","undefined","action","type","body","newMessageBody","Object","objectSpread","concat","toConsumableArray","DialogItem","path","className","s","dialog","active","react_router_dom","to","Message","FormControl","_ref","_ref$meta","meta","touched","error","children","hasError","styles","formControl","TextArea","input","restProps","objectWithoutProperties","FormsControls_FormControl","es_input","assign","InputForm","CheckBoxForm","es_checkbox","createField","placeholder","component","validate","text","Field","required","value","maxLengthCreator","maxLength","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElement","map","Dialogs_DialogItem_DialogItem","key","messageElement","Dialogs_Message_Message","dialogs","dialogsItems","messages","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","redirectComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","react_router","React","connect","ResultCodesEnum","ResultCodeForCaptchaEnum","compose","instance","axios","create","withCredentials","baseURL","headers","API-KEY","profileAPI","userId","get","then","res","data","status","put","photoFile","formData","FormData","append","Content-Type","profile","postsData","count","newPostText","actions","addPostActionCreator","setUserProfile","setStatus","savePhotoSuccess","photos","getUserProfile","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","profileReducer","newPost","Post","src","maxLength10","AddNewPostFormRedux","MyPosts","postsElement","MyPosts_Post_Post","createRef","addPost","MyPostsContainer","profilePage","Preloader","preloader","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","useEffect","Fragment","onClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfieleDataFormReduxForm","userDataBlock","keys","contacts","contact","style","formSummaryError","ProfieleData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitile","contactValue","es_button","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","preloader_Preloader","titleText","Title","photoBlock","avaBlockAll","avaBlock","large","chancheAva","inputfile","target","files","infoBlock","ProfileInfo_ProfileStatusWithHooks","statusBlock","ProfileDataForm","initialValues","ProfileInfo_ProfieleData","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","withRouter","Children","router","params","useParams","ProfileContainer","authorizedUserId","getStatus","console","refreshProfile","prevProps","_omponents_Profile_Profile","PureComponent","_callee2","_context2","_x2","_callee3","_context3","resultCode","_x3","file","_ref4","_callee4","_context4","_x4","_ref5","_callee5","getState","errorObj","match","fieldName","_context5","Error","_error","toLowerCase","stopSubmit","_x5","_x6","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","captchaUrl","payload","getAuthUserData","auth_reducer_regeneratorRuntime","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","LoginReduxForm","userNameText","passwordText","rememberMeText","buttonLogin1","buttonLogin","Login","useSelector","useDispatch","loginHead","loginForm","loginData","CaptchaIsRequired","initialized","HeaderBookSection","search","searchBook","searchBookEnter","setSearch","onKeyPress","BookList","book","navigate","useNavigate","container","bookid","thumbnail","volumeInfo","imageLinks","smallThumbnail","title","author","authors","categories","card","alt","bottom","BookDetails","bookId","setBookId","log","fetch","json","description","photobook","publishedDate","bookData","setData","booksection","Book_section_HeaderBookSection","evt","items","catch","element","Book_section_BookList","Book_section_BookDetails","getUsersSelector","usersPage","users","getPageSizeSelector","pageSize","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","currentPage","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","followingInProgress","getUsersFilter","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightProtionPageNumber","cn","defineProperty","pageNumber","User","user","unfollow","follow","small","followed","disabled","some","usersSearchFormValidate","UsersSearchForm","memo","formik_esm","term","friend","setSubmitting","onFilterChanged","isSubmitting","as","usersAPI","getUsers","response","userid","users_reducer_regeneratorRuntime","totalCount","usersReduser","u","Users","common_Paginator_Paginator","Users_User","UsersPage","pageTitle","Users_Users","selectIsAuth","selectCurrentUserLogin","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","avatar","backgroundColor","icon","UserOutlined","color","onAddTask","setTitle","event","preventDefault","index_esm","size","Task","onComplete","onDelete","isComplited","bs_index_esm","tb_index_esm","Tasks","tasksQuantity","comletedTask","LOCAL_STORAGE_KEY","setTasks","setTasksAndSaved","newTask","localStorage","setItem","JSON","stringify","saved","getItem","parse","loadSavedTasks","TodoHeader_Header","taskTitle","Date","now","taskId","Content","Footer","Sider","App","initializeApp","layout","minHeight","Header_Header","padding","maxHeight","width","height","MenuItem","fontSize","Profile_ProfileContainer","DialogsContainer","ToDoList_Todolist","_omponents_News_News","UsersContainer_UsersPage","Login_Login","Book_section_BookSection","textAlign","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","rootReducer","combineReducers","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","createRoot","document","getElementById","render","es","src_App_0","input-file","headertext"],"mappings":"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","file":"static/js/main.6e39bc11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookContainer\":\"BookDetails_bookContainer__zkGUF\",\"headerDetailsBlock\":\"BookDetails_headerDetailsBlock__3ZEH8\",\"headerDetailsBlockText\":\"BookDetails_headerDetailsBlockText__1ZRY2\",\"descriptionBlock\":\"BookDetails_descriptionBlock__6SeiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__12i2M\",\"pages\":\"Paginator_pages__w_Lqh\"};","module.exports = __webpack_public_path__ + \"static/media/user.cec7c2e4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"tasks_tasks__1VkH3\",\"header\":\"tasks_header__ll-lK\",\"textPurple\":\"tasks_textPurple__2nfps\",\"list\":\"tasks_list__2LD5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"task_task__2hG3_\",\"textCompleted\":\"task_textCompleted__1ZP7w\",\"checkContainer\":\"task_checkContainer__2FVHc\",\"deleteButton\":\"task_deleteButton__dYBM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__CEqkc\",\"posts\":\"MyPosts_posts__1PJFj\",\"postElement\":\"MyPosts_postElement__1GaEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__MCljg\",\"postText\":\"Post_postText__3hVNM\",\"postBorder\":\"Post_postBorder__196da\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"Profile_profileInfoBlock__15boR\",\"postBlock\":\"Profile_postBlock__3ovmJ\",\"profileAll\":\"Profile_profileAll__1WNBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3CtDg\",\"userBlock\":\"users_userBlock__1io-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"todoheader_header__3PGk6\",\"newTaskForm\":\"todoheader_newTaskForm__3K4gk\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.ae691311.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3CR-P\",\"h1\":\"Header_h1__EHKug\",\"img1\":\"Header_img1__tQK-J\",\"loginBlock\":\"Header_loginBlock__1W4gf\",\"head\":\"Header_head__2IlmK\"};","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>News section</div>\r\n    )\r\n}\r\n\r\nexport default News;","import { InferActionsType } from \"./redux-store\";\r\n\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    \r\n    messagesData: [\r\n        {id: 1, message: 'Hi'}, \r\n        {id: 2, message: 'How is your'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>,\r\n    \r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'}, \r\n        {id: 2, name: 'Stas'},\r\n        {id: 3, name: 'Gena'},\r\n        {id: 4, name: 'Turbo'},\r\n        {id: 5, name: 'Dusha'}\r\n    ] as Array<DialogType>\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/dialogs/SEND_MESSAGE': //Если тип acion = SEND_MESSAGE\r\n            let body = action.newMessageBody; //Присваиваем значение переменной сообщения\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]//Пушим в стейт новое сообщение\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type : 'SN/dialogs/SEND_MESSAGE', newMessageBody} as const)\r\n}\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsType<typeof actions>","import React, { FC } from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem: FC<PropsType> = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React, { FC } from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React, { FC } from \"react\"\r\nimport { Field, WrappedFieldProps } from \"redux-form\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport { FieldValidatorType } from \"../../../utils/validators/validators\"\r\nimport { WrappedFieldMetaProps } from \"redux-form/lib/Field\"\r\nimport { Checkbox, Input } from 'antd';\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    // child: any\r\n    // input: string\r\n    children: any\r\n}\r\n\r\n\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const TextArea: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <Input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const InputForm: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><Input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const CheckBoxForm: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><Checkbox {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined, \r\n                            name: FormKeysType, \r\n                            component: FC<WrappedFieldProps>, \r\n                            validate: Array<FieldValidatorType>, \r\n                            props = {}, \r\n                            text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validate} {...props} /> {text}\r\n    </div>\r\n}\r\n\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","export type FieldValidatorType = (value: string) => string | undefined \r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if(value) {\r\n        return undefined    \r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if(value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`; \r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React, { FC } from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { createField, TextArea } from \"../common/FormControl/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\";\r\nimport { LoginFormValuesType, LoginFormValuesTypeKeys } from \"../Login/Login\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElement = state.dialogsData\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/> ); \r\n        \r\n\r\n    let messageElement = state.\r\n    messagesData\r\n        .map( message => <Message message={message.message} key={message.id} />)\r\n\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n        \r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n           </div>\r\n           <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport type NewMessageValuesTypeKeys = Extract<keyof NewMessageFormValuesType, string>\r\ntype PropsType2 = {\r\n\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm: FC<InjectedFormProps<NewMessageFormValuesType, PropsType2> & PropsType2> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                {createField<NewMessageValuesTypeKeys>(\"Enter your message\", 'newMessageBody', TextArea, [required, maxLength50])}\r\n                {/* <Field component={TextArea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/> */}\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormValuesType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): mapStateToPropsforRedirectPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\ntype mapStateToPropsforRedirectPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nexport function withAuthRedirect(Component: React.ComponentType<mapStateToPropsforRedirectPropsType>)  {\r\n    class redirectComponent extends React.Component<mapStateToPropsforRedirectPropsType> {\r\n        render() {\r\n\r\n        \r\n        if(!this.props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n\r\n","import axios from \"axios\"\r\nimport { ProfileType, UsersType } from \"../types/types\";\r\n\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"594301d4-5e10-4b5a-b5ad-6549ff84c6b9\"\r\n    }\r\n});\r\n\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UsersType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { actions } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {...actions}), withAuthRedirect)(Dialogs);","import { APIResponseType, instance } from \"./api\";\r\nimport { PhotosType, ProfileType } from \"../types/types\";\r\n\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data);\r\n    },\r\n    updateStatus(status: string){\r\n        return instance.put<APIResponseType>(`profile/status`, {\r\n            status: status\r\n        }).then(res => res.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data);\r\n    }\r\n}","import { act } from \"react-dom/test-utils\";\r\nimport { FormAction, stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { PhotosType, PostType, ProfileType } from \"../types/types\";\r\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n            \r\n    postsData: [\r\n        {id: 1, message: 'Example first post', count:12}, \r\n        {id: 2, message: 'Example second post', count:44},\r\n        {id: 2, message: 'Example third post', count:34}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    newPostText: \"\"\r\n};\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch(action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                count: 12\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case 'SN/PROFILE/SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n            \r\n            \r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status: status} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos: photos} as const)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status);\r\n    if(data.resultCode  === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }   \r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file);\r\n    if(data.resultCode  === 0){\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }   \r\n}\r\n\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if(data.resultCode  === 0){\r\n        if(userId != null) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            throw new Error (\"userId can`t be null\")\r\n        }\r\n    } else {\r\n        let error = data.messages[0];\r\n        let errorObj: any = {'_error': error};\r\n        let match =  error.match(/Invalid url format \\(Contacts->(.+)\\)/);\r\n        if (match) {\r\n            let fieldName = match[1].toLowerCase()\r\n            errorObj = { 'contacts': {}}\r\n            errorObj.contacts[fieldName] = error\r\n        }\r\n        //dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        //return Promise.reject(response.data.messages[0]);\r\n        dispatch(stopSubmit(\"edit-profile\", errorObj))  \r\n        throw error;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React, {FC} from \"react\";\r\nimport s from './Post.module.css'\r\nimport { PostType } from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n    count: number\r\n    className: any\r\n}\r\n\r\nconst Post: FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.postBorder}>\r\n        <div className={s.item}>\r\n            <img src='https://cdn-icons-png.flaticon.com/512/25/25386.png' />\r\n            <div className={s.postText}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n        <div>\r\n                <span>like</span> {props.count}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Post;","import React, { FC } from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n//import { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { GetStringKeys, TextArea, createField } from \"../../common/FormControl/FormsControls\";\r\nimport { PostType } from \"../../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport type AddPostFormValuesType = {\r\n    newPostText: string\r\n}\r\n\r\n\r\ntype AddPostFormValuesTypeKeys = GetStringKeys<AddPostFormValuesType>\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm: FC<InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<AddPostFormValuesTypeKeys>(\"Post message\", \"newPostText\", TextArea, [required, maxLength10])}\r\n            </div>\r\n            <div>\r\n                <button>AddPost</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nlet AddNewPostFormRedux = reduxForm<AddPostFormValuesType, PropsType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\n\r\n\r\nexport type MapPropsType = {\r\n    postsData: Array<PostType>\r\n}\r\n\r\nexport type DispatchPropsType = {\r\n    addPost: (newPostText: string) => void    \r\n}\r\n\r\nconst MyPosts: FC<MapPropsType & DispatchPropsType> = (props) => {\r\n\r\n    let postsElement = props.postsData.map( p => <Post className={s.postElement} key={p.id} message={p.message} count={p.count} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values: AddPostFormValuesType) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return <div className={s.postsBlock}>\r\n        <h3>My Posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n            {postsElement}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../../../redux/profile-reducer\";\r\nimport MyPosts, { DispatchPropsType, MapPropsType } from \"./MyPosts\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: actions.addPostActionCreator\r\n})(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, { FC } from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Preloader: FC = () => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { Input } from \"antd\";\r\nimport React, { ChangeEvent, FC, useEffect, useState } from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    className: any\r\n}\r\n\r\nconst ProfileStatusWithHooks: FC<PropsType> = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b> <span onClick={activateMode}>{props.status || '-----------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <Input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { FC } from \"react\"\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { createField, GetStringKeys, InputForm, TextArea } from \"../../common/FormControl/FormsControls\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../common/FormControl/FormsControls.module.css\"\r\nimport { ProfileType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\r\n\r\nconst ProfieleDataForm: FC<InjectedFormProps<ProfileType, PropsType> & PropsType> = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.userDataBlock}>\r\n        <div>\r\n            <b>Full name</b>: {createField<ProfileTypeKeys>(\"Full name\", \"fullName\", InputForm, [])} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField<ProfileTypeKeys>(\"\", \"lookingForAJob\", InputForm, [], {type: \"checkbox\"})} \r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField<ProfileTypeKeys>(\"My professional skills\", \"lookingForAJobDescription\", TextArea, [])} \r\n        </div>\r\n        <div>\r\n            <b>About me</b>:  {createField<ProfileTypeKeys>(\"About me\", \"aboutMe\", TextArea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, InputForm, [])} </b> \r\n                </div>\r\n            }) } \r\n        </div>\r\n        <div><button>Save</button></div>\r\n            { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n//const ProfieleDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nconst ProfieleDataFormReduxForm = reduxForm<ProfileType, PropsType>({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nexport default ProfieleDataFormReduxForm;","import React, { ChangeEvent, FC, useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfieleDataForm from \"./ProfileDataForm\";\r\nimport { ContactsType, ProfileType } from \"../../../types/types\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport type { UploadProps } from 'antd';\r\nimport { Button, message, Upload } from 'antd';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = ({updateStatus, profile, status, isOwner, savePhoto, saveProfile}) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n        <div className={s.titleText}>\r\n            <Title>\r\n                Profile user\r\n            </Title>\r\n        </div>\r\n        \r\n        \r\n        \r\n        <div className={s.photoBlock}>\r\n            <div className={s.avaBlockAll}>\r\n                <div className={s.avaBlock}>\r\n                    <img src={profile.photos.large || userPhoto}/>\r\n                </div>\r\n                <div className={s.chancheAva}>\r\n                    <label className={s.inputfile}>\r\n                        {isOwner && <input type={\"file\"} name={\"file\"} onChange={onMainPhotoSelected} /> }\r\n                        <span>Change photo</span>\r\n                    </label>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n            <div className={s.infoBlock}>\r\n\r\n                <ProfileStatusWithHooks className={s.statusBlock} status={status != null ? status : \"User is not has status\"} updateStatus={updateStatus} />\r\n\r\n\r\n                {editMode \r\n                    ? <ProfieleDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n                    : <ProfieleData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/> }\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfieleData: FC<ProfileDataPropsType> = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.userDataBlock}>\r\n        \r\n        <div>\r\n            <b>Full name</b>: {profile.fullName} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"} \r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription} \r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe} \r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={(key)} contactTitile={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            }) } \r\n        </div>\r\n        {isOwner && <div><Button onClick={goToEditMode}>Edit</Button></div>}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\ntype ContactsPropsType = {\r\n    contactTitile: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: FC<ContactsPropsType> = ({contactTitile, contactValue}) => {\r\n    return(\r\n        <div className={s.contact}>\r\n            <b>{contactTitile}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React, { FC } from \"react\";\r\nimport { ParentComponent } from \"./Carousel/parentCarousel\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { ProfileType } from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return (\r\n    <div className={s.profileAll}>\r\n        <div className={s.profileInfoBlock}>\r\n            <ProfileInfo profile={props.profile} \r\n                        status={props.status} \r\n                        updateStatus={props.updateStatus} \r\n                        isOwner={props.isOwner} \r\n                        savePhoto={props.savePhoto} \r\n                        saveProfile={props.saveProfile}/>\r\n        </div>\r\n        <div className={s.postBlock}>\r\n            <MyPostsContainer />\r\n            {/* <div className={s.carouselBlock}>\r\n                <h2>Photos</h2>\r\n                <ParentComponent/>\r\n            </div> */}\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { ProfileType } from \"../../types/types\";\r\n\r\nexport function withRouter(Children: any) {\r\n    return (props: any) => {\r\n        const router = {params: useParams()};\r\n        return <Children {...props} router={router}/>\r\n    }\r\n}\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void \r\n    updateStatus: (status: string) => void \r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any> \r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n    router: any\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & PathParamsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.router.params.userId;\r\n\r\n\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if(!userId){\r\n            //     this.props.history.push(\"/login\");\r\n            // }\r\n        }\r\n\r\n        if(!userId) {\r\n            console.error(\"Id should exists\")\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType) {\r\n        if(this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} \r\n                isOwner={!this.props.router.params.userId} \r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { instance, APIResponseType, ResultCodeForCaptchaEnum, ResultCodesEnum } from \"./api\"\r\n\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {\r\n            email, password, rememberMe, captcha\r\n        }).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import { instance } from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data);\r\n    }\r\n}","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\";\r\nimport { authAPI } from \"../api/auth-api\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\r\nimport { Action } from \"redux\";\r\n\r\n\r\n\r\n\r\n// export type InitialStateType2 = {\r\n//     userId: number | null\r\n//     email: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n//     captchaUrl: string | null\r\n// }\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/auth/SET_USER_DATA':\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string  | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'SN/auth/SET_USER_DATA', \r\n        payload: {userId, email, login, isAuth}\r\n    } as const),\r\n\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {captchaUrl}\r\n    } as const)\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n    if(meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let loginData = await authAPI.login(email, password, rememberMe, captcha);\r\n        if(loginData.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData())\r\n        } else {    \r\n            if(loginData.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n\r\n    \r\n}\r\n\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(actions.setAuthUserData(null, null, null, false));\r\n        }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsType = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React, { FC } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { CheckBoxForm, createField, GetStringKeys, InputForm } from \"../common/FormControl/FormsControls\";\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"../common/FormControl/FormsControls.module.css\"\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\n\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = \r\n                    ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={style.userNameText}>Username: {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", InputForm, [required])}</div>\r\n                <div className={style.passwordText}>Password: {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", InputForm, [required], {type: \"password\"})}</div>\r\n                <div className={style.rememberMeText}>Remember me{createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", CheckBoxForm, [], {type: \"checkbox\"})}</div>\r\n\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", InputForm, [required], {} )}\r\n\r\n                { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div className={style.buttonLogin1}>\r\n                    <button className={style.buttonLogin}>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\n\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\n\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const captchaUrl = useSelector( (state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector( (state: AppStateType) => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch<any>(login(formData.email, formData.password, formData.rememberMe, formData.captcha));\r\n    }\r\n\r\n    if(isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 className={style.loginHead}>Login</h1>\r\n            <div className={style.loginForm}>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { type } from \"os\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\nimport { InferActionsType } from \"./redux-store\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsType = InferActionsType<typeof actions>\r\n\r\nexport const appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise]).then(() => {\r\n        dispatch(actions.initializedSuccess());\r\n    });\r\n\r\n}","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport s from './BookSection.module.css'\r\n\r\nconst HeaderBookSection = ({search, searchBook, searchBookEnter, setSearch}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.header}>\r\n                    <div className={s.search}>\r\n                        <p>Find your book:</p>\r\n                        <input type=\"text\" placeholder=\"Enter your book name\"\r\n                        value={search} onChange={e => setSearch(e.target.value)}\r\n                        onKeyPress={searchBookEnter}/>\r\n                        <button onClick={searchBook}>Search</button>\r\n                    </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderBookSection;","import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport s from './BookSection.module.css'\r\n\r\nconst BookList = ({book}) => {\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n    //console.log(book);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {\r\n                book.map((item) => {\r\n                    // console.log(item.id);\r\n                    let bookid = item.id;\r\n                    let thumbnail = item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.smallThumbnail;\r\n                    let title = item.volumeInfo.title;\r\n                    let author = item.volumeInfo.authors;\r\n                    let categories = item.volumeInfo.categories;\r\n                    if(thumbnail !== undefined && title !== undefined && author != undefined && categories !== undefined) {\r\n                        return (\r\n                            <>\r\n                            <div className={s.card} key={item.id}>\r\n                            \r\n                                <img src={thumbnail} alt=\"\" \r\n                                onClick={() => navigate(`${bookid}`, {state: bookid})}\r\n                                />\r\n                                <div className={s.bottom}>\r\n                                    <p className={s.categories}>{categories}</p>\r\n                                    <h3 className={s.title}>{title}</h3>\r\n                                    <p className={s.author}>{author}</p>\r\n                                </div>\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport s from './BookDetails.module.css'\r\n\r\nconst BookDetails = () => {\r\n\r\n    const {id} = useParams();\r\n    const [bookId, setBookId] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    console.log(id);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://www.googleapis.com/books/v1/volumes/${id}?key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg`)\r\n            .then(res => res.json())\r\n            .then(data => setBookId(data))\r\n    }, [id]);\r\n\r\n\r\n    if(bookId == null) return 'Loading...'\r\n    let description = bookId.volumeInfo.description;\r\n    let photobook = bookId.volumeInfo.imageLinks.smallThumbnail;\r\n    let title = bookId.volumeInfo.title;\r\n    let author = bookId.volumeInfo.authors;\r\n    let publishedDate = bookId.volumeInfo.publishedDate;\r\n    return (\r\n        <div className={s.bookContainer}>\r\n            <div className={s.headerDetailsBlock}>\r\n                <img src={photobook} alt=\"\" />\r\n                <div className={s.headerDetailsBlockText}>\r\n                    <h2>{title}</h2>\r\n                    <p>Автор: {author}</p>\r\n                    <span>Дата публикации: {publishedDate}</span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>Описание:</div>\r\n                <p>{description}</p>\r\n            </div>\r\n            <button onClick={() => navigate('/sectionbook')}>Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BookDetails;","import React, {useState} from \"react\";\r\nimport s from './BookSection.module.css'\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HeaderBookSection from \"./HeaderBookSection\";\r\nimport BookList from \"./BookList\";\r\nimport BookDetails from \"./BookDetails\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\n\r\nconst BookSection = (props) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [bookData, setData] = useState([]);\r\n\r\n    const searchBookEnter = (evt) => {\r\n        if (evt.key === \"Enter\"){\r\n            axios.get('https://www.googleapis.com/books/v1/volumes?q='+search+'&key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg'+'&maxResults=30')\r\n            .then(res=> setData(res.data.items))\r\n            .catch()\r\n        }\r\n    }\r\n\r\n    const searchBook = (evt) => {\r\n        if(evt.key === \"Enter\" || true)\r\n        axios.get('https://www.googleapis.com/books/v1/volumes?q='+search+'&key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg'+'&maxResults=30')\r\n            .then(res=> setData(res.data.items))\r\n            .catch()\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <div className={s.booksection}>\r\n            <HeaderBookSection search={search} searchBook={searchBook} searchBookEnter={searchBookEnter} setSearch={setSearch}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<BookList book={bookData}/>} />\r\n                <Route path=\"/:id\" element={<BookDetails />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(withAuthRedirect)(BookSection);","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getPageSizeSelector = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, { useState, FC } from \"react\";\r\n// import styles from './Paginator.module.css';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\nimport { Button } from \"antd\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: FC<PropsType>  = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil (totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightProtionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.pages}>\r\n        \r\n\r\n        <div className={styles.pages}>\r\n        { portionNumber > 1 && <Button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</Button> }\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<= rightProtionPageNumber)\r\n            .map((p) => {\r\n                return <Button className={ cn ({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                // {( currentPage === p && styles.selectedPage )} \r\n                 key={p} onClick={(e)=> {onPageChanged(p)}} >{p}</Button>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</Button>}\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import axios from \"axios\";\r\nimport React, { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport styles from './users.module.css';\r\nimport { UsersType } from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userid: number) => void\r\n    follow: (userid: number) => void\r\n}\r\n\r\n\r\nconst User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n\r\n    return (\r\n        <div className={styles.userBlock}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    { user.followed ? \r\n                        <button disabled={followingInProgress.\r\n                            some(id => id === user.id)} \r\n                                onClick={ () => {unfollow(user.id)}}>\r\n                                    Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} \r\n                                onClick={ () => {follow(user.id)}}>\r\n                                Follow</button>}\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.id}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React, { FC } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { FilterType } from \"../../redux/users-reducer\";\r\n\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: any //\"true\" | \"false\" | \"null\"\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: FC<PropsType> = React.memo((props) => {\r\n\r\n    \r\n\r\n    const submit = (values: FormType, { setSubmitting }: {setSubmitting: (isSubmiting: boolean) => void} ) => {\r\n\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter);\r\n        setSubmitting(false);    \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n    <Formik\r\n       initialValues={{ term: '', friend: 'null'}}\r\n       validate={usersSearchFormValidate}\r\n       onSubmit={submit}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"text\" name=\"term\" />\r\n           <Field name=\"friend\" as=\"select\">\r\n                <option value=\"null\">All</option>\r\n                <option value=\"true\">Followed</option>\r\n                <option value=\"false\">Undollowed</option>\r\n           </Field>\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Search\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n        </div>\r\n    )\r\n})","import { AxiosPromise } from \"axios\";\r\nimport { GetItemsType, APIResponseType, instance } from \"./api\";\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data;\r\n        });\r\n    },\r\n    follow(userid: number) {\r\n        return instance.post<APIResponseType>(`follow/${userid}`).then(res => res.data)\r\n    },\r\n    unfollow(userid: number) {\r\n        return instance.delete(`follow/${userid}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n        \r\n}","import { Dispatch } from \"redux\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { PhotosType, UsersType } from \"../types/types\";\r\nimport { AppStateType, BaseThunkType, InferActionsType } from \"./redux-store\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { APIResponseType } from \"../api/api\";\r\n\r\n\r\n\r\n// const FOLLOW = 'FOLLOW';\r\n// const UNFOLLOW = 'UNFOLLOW';\r\n// const SET_USERS = 'SET_USERS';\r\n// const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n// const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n// const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n// const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [ ] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // array of users id`s: number\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean \r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst usersReduser = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/USERS/FOLLOW': \r\n            return {\r\n                ...state, \r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'SN/USERS/UNFOLLOW': \r\n            return {\r\n                ...state,\r\n                users: state.users.map (u => {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                } )\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return  {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return  {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return  {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return  {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userid] \r\n                : state.followingInProgress.filter(id => id != action.userid)}\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userid: number) => (\r\n        {type: 'SN/USERS/FOLLOW', userid} as const\r\n    ),\r\n    \r\n    unfollowSuccess: (userid: number) => (\r\n        {type: 'SN/USERS/UNFOLLOW', userid} as const\r\n    ),\r\n    \r\n    setUsers: (users: Array<UsersType>) => (\r\n        {type: 'SN/USERS/SET_USERS', users} as const\r\n    ),\r\n    \r\n    setCurrentPage: (currentPage: number) => (\r\n        {type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const\r\n    \r\n    ),\r\n\r\n    setFilter: (filter: FilterType) => (\r\n        {type: 'SN/USERS/SET_FILTER', payload: filter} as const\r\n    \r\n    ),\r\n    \r\n    setTotalUsersCount: (totalUsersCount: number) => (\r\n        {type: 'SN/USERS/SET_TOTAL_USERS_COUNT', count: totalUsersCount} as const\r\n    ),\r\n    \r\n    toggleIsFetching: (isFetching: boolean) => (\r\n        {type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const\r\n    ),\r\n    \r\n    toggleFollowingProgress: (isFetching: boolean, userid: number) => (\r\n        {type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userid} as const\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n    \r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setFilter(filter));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n        dispatch(actions.setCurrentPage(currentPage));\r\n    }\r\n}\r\n\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, userid: number, apiMethod: (userid: number) => Promise<APIResponseType>, \r\n                                    actionCreator: (userid: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userid));\r\n\r\n    let data = await apiMethod(userid);\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator(userid));\r\n    }\r\n\r\n    dispatch(actions.toggleFollowingProgress(false, userid));\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userid: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n       await _followUnfollowFlow(dispatch, userid, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userid: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n       await _followUnfollowFlow(dispatch, userid, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReduser;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type FilterType = typeof initialState.filter;\r\n\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>","import axios from \"axios\";\r\nimport React, { FC, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport styles from './users.module.css';\r\nimport { UsersType } from \"../../types/types\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { UsersSearchForm } from \"./UsersSearchForm\";\r\nimport { FilterType, getUsers } from \"../../redux/users-reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentPageSelector, getFollowingInProgressSelector, getPageSizeSelector, getTotalUsersCountSelector, getUsersFilter, getUsersSelector } from \"../../redux/users-selectors\";\r\n\r\ntype PropsType = {\r\n    //pageSize: number\r\n    //currentPage: number,\r\n    //onPageChanged: (pageNumber: number) => void\r\n    //onFilterChanged: (filter: FilterType) => void\r\n    //users: Array<UsersType>\r\n    //followingInProgress: Array<number>\r\n    //unfollow: (userid: number) => void\r\n    //follow: (userid: number) => void\r\n}\r\n\r\nexport const Users: FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsersSelector)\r\n    const totalUsersCount = useSelector(getTotalUsersCountSelector)\r\n    const currentPage = useSelector(getCurrentPageSelector)\r\n    const pageSize = useSelector(getPageSizeSelector)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgressSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch<any>(getUsers(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch<any>(getUsers(pageNumber, pageSize, filter));\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch<any>(getUsers(1, pageSize, filter))\r\n    }\r\n    \r\n    const follow = (userid: number) => {\r\n        dispatch<any>(follow(userid));\r\n    }\r\n\r\n    const unfollow = (userid: number) => {\r\n        dispatch<any>(unfollow(userid));\r\n    }\r\n\r\n    return <div>\r\n\r\n    <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n    <div>\r\n    {\r\n        users.map( u => <User user={u} key={u.id} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow}/>\r\n        )}\r\n    </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import React, {FC} from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { follow, unfollow, getUsers, FilterType } from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector, getPageSizeSelector, getTotalUsersCountSelector, getUsersFilter, getUsersSelector } from \"../../redux/users-selectors\";\r\nimport { getStatus } from \"../../redux/profile-reducer\"; \r\nimport { UsersType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { Users } from \"./Users\";\r\n\r\n// type MapStatePropsType = {\r\n//     currentPage: number\r\n//     pageSize: number\r\n//     isFetching: boolean\r\n//     totalUsersCount: number\r\n//     users: Array<UsersType>\r\n//     followingInProgress: Array<number>\r\n//     filter: FilterType\r\n// }\r\n\r\n// type MapDispatchPropsType = {\r\n//     unfollow: (userid: number) => void\r\n//     follow: (userid: number) => void\r\n//     getUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n// }\r\n\r\n// type OwnPropsType = {\r\n//     pageTitle: string\r\n// }\r\n\r\n// type PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\n\r\nexport const UsersPage: FC<UsersPagePropsType> = (withAuthRedirect, props) => {\r\n\r\n    const isFetching = useSelector(getIsFetchingSelector)\r\n\r\n    return <>\r\n    <h2>{props.pageTitle}</h2>\r\n    {isFetching ? <Preloader/> : null}\r\n     <Users //totalUsersCount={this.props.totalUsersCount} \r\n            //pageSize={this.props.pageSize}\r\n            //currentPage={this.props.currentPage}\r\n            //onPageChanged={onPageChanged}\r\n            //onFilterChanged={onFilterChanged}\r\n            //users={props.users}\r\n            //follow={props.follow}\r\n            //unfollow={props.unfollow}\r\n            //followingInProgress={props.followingInProgress}\r\n/>\r\n</>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n \r\n//     return {\r\n//         users: getUsersSelector(state),\r\n//         pageSize: getPageSizeSelector(state),\r\n//         totalUsersCount: getTotalUsersCountSelector(state),\r\n//         currentPage: getCurrentPageSelector(state),\r\n//         isFetching: getIsFetchingSelector(state),\r\n//         followingInProgress: getFollowingInProgressSelector(state),\r\n//         filter: getUsersFilter(state)\r\n//     }\r\n// }\r\n\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userid) => {\r\n            dispatch(followAC(userid));\r\n        },\r\n        unfollow: (userid) => {\r\n            dispatch(unfollowAC(userid));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n// export default compose<React.ComponentType>(\r\n//     withAuthRedirect,\r\n//     connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, \r\n//         {follow, unfollow, \r\n//             // setCurrentPage,   \r\n//             // toggleFollowingProgress, \r\n//             getUsers\r\n//         })\r\n// )(UsersContainer);","import { AppStateType } from \"./redux-store\";\r\n\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state: AppStateType) => {\r\n    return state.auth.login;\r\n}","import React, { FC } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport s from './Header.module.css';\r\nimport { Avatar, Button, Col, Row } from 'antd';\r\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\r\nimport { LaptopOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCurrentUserLogin, selectIsAuth } from \"../../redux/auth-selectors\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\nexport type MapPropsType = {\r\n}\r\n\r\n\r\nexport const Header: FC<MapPropsType> = (props) => {\r\n\r\n  const isAuth = useSelector(selectIsAuth);\r\n  const login = useSelector(selectCurrentUserLogin);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutCallback = () => {\r\n    dispatch<any>(logout())\r\n  }\r\n\r\n  const { Header} = Layout;\r\n  return (\r\n    <Header>\r\n        <Row>\r\n          <Col span={20}>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} >\r\n              <div className={s.head}>\r\n                Social Network\r\n              </div>\r\n            </Menu>\r\n          </Col>\r\n          {isAuth ?\r\n            <>\r\n              <Col span={1}>\r\n                <Avatar alt={login || ''} style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />\r\n              </Col>\r\n              <Col span={2} style={{color: 'white'}}>\r\n                {login}\r\n              </Col>\r\n              <Col span={1}>\r\n                <Button onClick={logoutCallback}>Log out</Button>\r\n              </Col>\r\n            </>\r\n            : <Col span={4}>\r\n              <Button>\r\n                <NavLink to={'/login'}>Login</NavLink> \r\n              </Button>\r\n            </Col>}\r\n        </Row>\r\n      </Header>\r\n\r\n\r\n\r\n  // <header className={s.header}>\r\n  //   <img className={s.img1} src=\"https://img.freepik.com/premium-vector/logo-letter-sn_638109-16.jpg\"/>\r\n  //   <span className={s.h1}>Social network</span>  \r\n\r\n  //   <div className={s.loginBlock}>\r\n  //     {props.isAuth ? <div>\r\n  //       <div>{props.login}</div> \r\n  //         <button onClick={props.logout}>Log out</button>\r\n  //       </div>\r\n  //       :<NavLink to={'/login'}>Login</NavLink> }\r\n  //   </div>\r\n  // </header>\r\n  )\r\n}","import { Button, Form, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport s from \"./todoheader.module.css\"\r\nimport {AiOutlinePlusCircle} from 'react-icons/ai'\r\n\r\nexport function Header( {onAddTask} ) {\r\n    const [title, setTitle] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        onAddTask(title);\r\n        setTitle('');\r\n    }\r\n\r\n    function onChangeTitlt(event) {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <h2>To do list</h2>\r\n            <form onSubmit={handleSubmit} className={s.newTaskForm}>\r\n                <input placeholder=\"Add task\" type=\"text\" value={title} onChange={onChangeTitlt}/>\r\n                <button>\r\n                    Create\r\n                    <AiOutlinePlusCircle size={20} />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./task.module.css\"\r\nimport {TbTrash} from 'react-icons/tb'\r\nimport {BsFillCheckCircleFill} from 'react-icons/bs'\r\n\r\nexport function Task({task, onComplete, onDelete}) {\r\n\r\n    return (\r\n        <div className={s.task}>\r\n            <button className={s.checkContainer} onClick={() => onComplete(task.id)}>\r\n                {task.isComplited ? <BsFillCheckCircleFill /> : <div/>}\r\n            </button>\r\n\r\n            <p className={task.isComplited ? s.textCompleted : \"\"}>{task.title}</p>\r\n\r\n            <button className={s.deleteButton} onClick={() => onDelete(task.id)}>\r\n                <TbTrash size={20}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./tasks.module.css\"\r\nimport { Task } from \"../Task/Task\";\r\n\r\nexport function Tasks( {tasks, onComplete, onDelete} ) {\r\n    const tasksQuantity = tasks.length;\r\n    const comletedTask = tasks.filter(task => task.isComplited).length;\r\n\r\n    return (\r\n        <section className={s.tasks}>\r\n            <header className={s.header}>\r\n                <div>\r\n                    <p>Create task</p>\r\n                    <span>{tasksQuantity}</span>\r\n                </div>\r\n                <div>\r\n                    <p className={s.textPurple}>Complited</p>\r\n                    <span>{comletedTask} of {tasksQuantity}</span>\r\n                </div>\r\n            </header>\r\n\r\n            <div className={s.list}>\r\n                {tasks.map(task => (\r\n                    <Task key={task.id} task={task} onComplete={onComplete} onDelete={onDelete}/>\r\n                ))}\r\n                \r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Header } from \"./Header/TodoHeader\";\r\nimport { Tasks } from \"./Tasks/TaskList\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst LOCAL_STORAGE_KEY = \"todo:savedTasks\"\r\n\r\nconst Todolist = (props) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    function loadSavedTasks() {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        if(saved){\r\n            setTasks(JSON.parse(saved));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadSavedTasks();\r\n    }, [])\r\n\r\n    function setTasksAndSaved(newTask) {\r\n        setTasks(newTask);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(newTask));\r\n    }\r\n\r\n\r\n    function addTask(taskTitle) {\r\n        setTasksAndSaved([\r\n            ...tasks,\r\n            {\r\n                id: Date.now(),\r\n                title: taskTitle,\r\n                isComplited: false\r\n            }\r\n        ]);\r\n    }\r\n\r\n    function deleteTaskById(taskId) {\r\n        const newTasks = tasks.filter(task => task.id !== taskId);\r\n        setTasksAndSaved(newTasks);\r\n    }\r\n\r\n    function toggleTaskCompletedById(taskId) {\r\n        const newTask = tasks.map(task => {\r\n            if(task.id === taskId) {\r\n                return {\r\n                    ...task,\r\n                    isComplited: !task.isComplited\r\n                }\r\n            }\r\n            return task;\r\n        });\r\n\r\n        setTasksAndSaved(newTask);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header onAddTask={addTask}/>\r\n            <Tasks tasks={tasks} onComplete={toggleTaskCompletedById} onDelete={deleteTaskById}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default compose(withAuthRedirect)(Todolist);","import logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/reset.css'\n//import Header from './сomponents/Header/Header';\nimport Navbar from './сomponents/Navbar/Navbar';\nimport News from './сomponents/News/News';\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport React from 'react';\n//import store, { updateNewPostText } from './redux/store';\nimport DialogsContainer from './сomponents/Dialogs/DialogsContainer';\n//import UsersContainer from './сomponents/Users/UsersContainer';\nimport ProfileContainer, { withRouter } from './сomponents/Profile/ProfileContainer';\n//import HeaderContainer from './сomponents/Header/HeaderContainer';\nimport {Login} from './сomponents/Login/Login';\nimport { connect } from 'react-redux';\nimport {getAuthUserData} from \"./redux/auth-reducer\"\nimport { compose } from 'redux';\nimport {initializeApp} from \"./redux/app-reducer\"\nimport Preloader from './сomponents/common/preloader/Preloader';\nimport BookSection from './сomponents/Book section/BookSection';\nimport { AppStateType } from './redux/redux-store';\nimport { UsersPage } from './сomponents/Users/UsersContainer';\n\nimport s from '../src/сomponents/Navbar/Navbar.module.css'\nimport { NavLink } from \"react-router-dom\";\nimport { LaptopOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport { Col, MenuProps, Row } from 'antd';\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\nimport MenuItem from 'antd/es/menu/MenuItem';\nimport { Avatar } from 'antd';\nimport { Header } from './сomponents/Header/Header';\nimport Todolist from './сomponents/ToDoList/Todolist';\n\nconst { Content, Footer, Sider } = Layout;\n\n\n\n\ntype MapPropsType = ReturnType<typeof mapStateToProps> \n\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n\n  componentDidMount() {\n    this.props.initializeApp();\n    // window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n\n  render() {\n\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n\n\n\n    return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header />\n      <Content style={{ padding: '0 50px' }}>\n        <Layout style={{ padding: '24px 0'/*, background: colorBgContainer */}}>\n          <Sider style={{ /*background: colorBgContainer*/ minHeight: \"85vh\", maxHeight: \"85vh\"}} width={300}>\n            <Menu\n              mode=\"inline\"\n              //defaultSelectedKeys={['1']}\n              //defaultOpenKeys={['sub1']}\n              style={{ height: '100%'}}\n              /*items={items2}*/\n            >\n              <MenuItem key=\"1\" style={{fontSize: '20px' }}><NavLink to=\"/profile\">Profile</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/users\">Users</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/todolist\">To do list</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/sectionbook\">Book section</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/dialogs\">Message</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/news\">News</NavLink></MenuItem>\n            </Menu>\n          </Sider>\n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          <Routes>\n            <Route path='/' element={<Navigate to=\"/profile\" />} />\n            <Route path='/profile' element={<ProfileContainer/>}>\n              <Route path=':userId' element={<ProfileContainer />} />\n            </Route>\n            <Route path='/dialogs' element={<DialogsContainer />} />\n            <Route path='/todolist' element={<Todolist/>} />\n            <Route path='/news' element={<News/>} />\n            <Route path='/users' element={ <UsersPage pageTitle={\"Clients social network\"}/> } />\n            <Route path='/login' element={ <Login/> } />\n            <Route path='/sectionbook' element={ <BookSection/> } >\n              <Route path=':id' element={<BookSection/>}/>\n            </Route>\n            <Route path='*' element={<div>404 NOT FOUND</div>}/>\n          </Routes>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Social Network ©2023 Created by Savodyarkin Nikita</Footer>\n    </Layout>\n\n\n\n\n    //<BrowserRouter>\n\n\n      /*<div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Routes>\n            <Route path='/' element={<Navigate to=\"/profile\" />} />\n            <Route path='/profile' element={<ProfileContainer/>}>\n              <Route path=':userId' element={<ProfileContainer />} />\n            </Route>\n            <Route path='/dialogs' element={<DialogsContainer />} />\n            <Route path='/news' element={<News/>} />\n            <Route path='/users' element={ <UsersPage pageTitle={\"Clients social network\"}/> } />\n            <Route path='/login' element={ <Login/> } />\n            <Route path='/sectionbook' element={ <BookSection/> } >\n              <Route path=':id' element={<BookSection/>}/>\n            </Route>\n            <Route path='*' element={<div>404 NOT FOUND</div>}/>\n          </Routes>\n        </div>\n      </div>*/\n\n\n    //</BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\n\nexport default  compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {Action, applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReduser from \"./users-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./app-reducer\"\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\nexport type InferActionsType<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>> \r\n\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as Element);\n  \nroot.render(\n  //<React.StrictMode>\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n  //</React.StrictMode>\n);\n\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3J5tv\",\"error\":\"FormsControls_error__2FyOX\",\"formSummaryError\":\"FormsControls_formSummaryError__1FYg8\",\"loginForm\":\"FormsControls_loginForm__3GWcH\",\"loginHead\":\"FormsControls_loginHead__dHjJw\",\"buttonLogin\":\"FormsControls_buttonLogin__1hrcj\",\"buttonLogin1\":\"FormsControls_buttonLogin1__El3r4\",\"userNameText\":\"FormsControls_userNameText__1bmu-\",\"passwordText\":\"FormsControls_passwordText__2A3Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBlock\":\"ProfileInfo_infoBlock__1ghbU\",\"userDataBlock\":\"ProfileInfo_userDataBlock__1NHi9\",\"photoBlock\":\"ProfileInfo_photoBlock__3Q1BA\",\"avaBlockAll\":\"ProfileInfo_avaBlockAll__2jpmr\",\"avaBlock\":\"ProfileInfo_avaBlock__38ev8\",\"chancheAva\":\"ProfileInfo_chancheAva__5Wbq8\",\"contact\":\"ProfileInfo_contact__2JpAd\",\"inputfile\":\"ProfileInfo_inputfile__1Trvv\",\"input-file\":\"ProfileInfo_input-file__Nowvr\",\"titleText\":\"ProfileInfo_titleText__EmbVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BookSection_header__2UF0u\",\"headertext\":\"BookSection_headertext__2bERP\",\"search\":\"BookSection_search__1NI_m\",\"container\":\"BookSection_container__23p8v\",\"card\":\"BookSection_card__3jhfw\",\"bottom\":\"BookSection_bottom__4ZxlM\",\"title\":\"BookSection_title__1dCEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wmgq\",\"dialogsItems\":\"Dialogs_dialogsItems__3sRuA\",\"active\":\"Dialogs_active__ksLX2\",\"messages\":\"Dialogs_messages__1di5G\",\"message\":\"Dialogs_message__2EhZX\"};"],"sourceRoot":""}