{"version":3,"sources":["assets/images/user.png","сomponents/Book section/BookDetails.module.css","сomponents/common/Paginator/Paginator.module.css","сomponents/ToDoList/Tasks/tasks.module.css","сomponents/ToDoList/Task/task.module.css","сomponents/Profile/Profile.module.css","сomponents/Users/users.module.css","сomponents/ToDoList/Header/todoheader.module.css","assets/images/Spinner-1s-200px.svg","сomponents/Header/Header.module.css","сomponents/News/News.jsx","redux/dialogs-reducer.ts","сomponents/Dialogs/DialogItem/DialogItem.tsx","сomponents/Dialogs/Message/Message.tsx","сomponents/common/FormControl/FormsControls.tsx","utils/validators/validators.ts","сomponents/Dialogs/Dialogs.tsx","api/hoc/withAuthRedirect.tsx","api/api.ts","сomponents/Dialogs/DialogsContainer.tsx","сomponents/common/preloader/Preloader.tsx","сomponents/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","сomponents/Profile/ProfileInfo/ProfileDataForm.tsx","сomponents/Profile/ProfileInfo/ProfileInfo.tsx","сomponents/Profile/Profile.tsx","api/profile-api.ts","redux/profile-reducer.ts","сomponents/Profile/ProfileContainer.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","сomponents/Login/Login.tsx","redux/app-reducer.ts","сomponents/Book section/HeaderBookSection.jsx","сomponents/Book section/BookList.jsx","сomponents/Book section/BookDetails.jsx","сomponents/Book section/BookSection.jsx","redux/users-selectors.ts","сomponents/common/Paginator/Paginator.tsx","сomponents/Users/User.tsx","сomponents/Users/UsersSearchForm.tsx","api/users-api.ts","redux/users-reducer.ts","сomponents/Users/Users.tsx","сomponents/Users/UsersContainer.tsx","redux/auth-selectors.ts","сomponents/Header/Header.tsx","сomponents/ToDoList/Header/TodoHeader.jsx","сomponents/ToDoList/Task/Task.jsx","сomponents/ToDoList/Tasks/TaskList.jsx","сomponents/ToDoList/Todolist.jsx","App.tsx","reportWebVitals.js","redux/sidebar-reducer.ts","redux/redux-store.ts","index.tsx","сomponents/Profile/ProfileInfo/ProfileInfo.module.css","сomponents/Book section/BookSection.module.css","сomponents/common/FormControl/FormsControls.module.css","сomponents/Dialogs/Dialogs.module.css"],"names":["module","exports","__webpack_require__","p","bookContainer","headerDetailsBlock","headerDetailsBlockText","descriptionBlock","selectedPage","pages","tasks","header","textPurple","list","task","textCompleted","checkContainer","deleteButton","profileInfoBlock","postBlock","profileAll","userPhoto","userBlock","newTaskForm","h1","img1","loginBlock","head","News","props","react_default","a","createElement","initialState","messagesData","id","message","dialogsData","name","dialogsReducer","state","arguments","length","undefined","action","type","body","newMessageBody","Object","objectSpread","concat","toConsumableArray","DialogItem","path","className","s","dialog","active","react_router_dom","to","Message","FormControl","_ref","_ref$meta","meta","touched","error","children","hasError","styles","formControl","TextArea","input","restProps","objectWithoutProperties","FormsControls_FormControl","es_input","assign","InputForm","CheckBoxForm","es_checkbox","createField","placeholder","component","validate","text","Field","maxLength","required","value","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElement","map","Dialogs_DialogItem_DialogItem","key","messageElement","Dialogs_Message_Message","dialogs","dialogsItems","messages","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","redirectComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","react_router","React","connect","ResultCodesEnum","ResultCodeForCaptchaEnum","compose","Preloader","src","preloader","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","Fragment","onClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfieleDataFormReduxForm","profile","userDataBlock","keys","contacts","contact","style","formSummaryError","ProfieleData","_ref2","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitile","contactValue","es_button","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","preloader_Preloader","titleText","Title","photoBlock","avaBlockAll","avaBlock","photos","large","chancheAva","inputfile","target","files","infoBlock","ProfileInfo_ProfileStatusWithHooks","statusBlock","ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfieleData","Profile","Profile_ProfileInfo_ProfileInfo","instance","axios","create","withCredentials","baseURL","headers","API-KEY","profileAPI","userId","get","res","data","put","photoFile","FormData","append","Content-Type","postsData","count","newPostText","actions","getUserProfile","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","profileReducer","newPost","withRouter","Children","router","params","useParams","ProfileContainer","authorizedUserId","getStatus","console","refreshProfile","prevProps","_omponents_Profile_Profile","PureComponent","profilePage","_callee2","_context2","_x2","_callee3","_context3","resultCode","_x3","file","_ref4","_callee4","_context4","_x4","_ref5","_callee5","getState","errorObj","match","fieldName","_context5","Error","_error","toLowerCase","stopSubmit","_x5","_x6","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","captchaUrl","payload","getAuthUserData","auth_reducer_regeneratorRuntime","meData","_meData$data","_login","Success","getCaptchaUrl","url","authReducer","LoginReduxForm","userNameText","passwordText","rememberMeText","buttonLogin1","buttonLogin","Login","useSelector","useDispatch","loginHead","loginForm","loginData","CaptchaIsRequired","initialized","HeaderBookSection","search","searchBook","searchBookEnter","setSearch","onKeyPress","BookList","book","navigate","useNavigate","container","item","bookid","thumbnail","volumeInfo","imageLinks","smallThumbnail","title","author","authors","categories","card","alt","bottom","BookDetails","bookId","setBookId","log","fetch","json","description","photobook","publishedDate","bookData","setData","booksection","Book_section_HeaderBookSection","evt","items","catch","element","Book_section_BookList","Book_section_BookDetails","getUsersSelector","usersPage","users","getPageSizeSelector","pageSize","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","currentPage","getIsFetchingSelector","isFetching","getFollowingInProgressSelector","followingInProgress","getUsersFilter","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightProtionPageNumber","cn","defineProperty","pageNumber","User","user","unfollow","follow","small","followed","disabled","some","usersSearchFormValidate","UsersSearchForm","memo","formik_esm","term","friend","setSubmitting","onFilterChanged","isSubmitting","as","usersAPI","getUsers","response","userid","users_reducer_regeneratorRuntime","totalCount","usersReduser","u","Users","common_Paginator_Paginator","Users_User","UsersPage","pageTitle","Users_Users","selectIsAuth","selectCurrentUserLogin","Header","Layout","row","col","span","menu","theme","mode","defaultSelectedKeys","avatar","backgroundColor","icon","UserOutlined","color","onAddTask","setTitle","event","preventDefault","index_esm","size","Task","onComplete","onDelete","isComplited","bs_index_esm","tb_index_esm","Tasks","tasksQuantity","comletedTask","LOCAL_STORAGE_KEY","setTasks","setTasksAndSaved","newTask","localStorage","setItem","JSON","stringify","saved","getItem","parse","loadSavedTasks","TodoHeader_Header","taskTitle","Date","now","taskId","Content","Footer","Sider","App","initializeApp","layout","minHeight","Header_Header","padding","maxHeight","width","height","MenuItem","fontSize","Profile_ProfileContainer","DialogsContainer","ToDoList_Todolist","_omponents_News_News","UsersContainer_UsersPage","Login_Login","Book_section_BookSection","textAlign","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","rootReducer","combineReducers","sidebar","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","createRoot","document","getElementById","render","es","src_App_0","input-file","headertext"],"mappings":"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","file":"static/js/main.09f37458.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.cec7c2e4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookContainer\":\"BookDetails_bookContainer__zkGUF\",\"headerDetailsBlock\":\"BookDetails_headerDetailsBlock__3ZEH8\",\"headerDetailsBlockText\":\"BookDetails_headerDetailsBlockText__1ZRY2\",\"descriptionBlock\":\"BookDetails_descriptionBlock__6SeiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__12i2M\",\"pages\":\"Paginator_pages__w_Lqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasks\":\"tasks_tasks__1VkH3\",\"header\":\"tasks_header__ll-lK\",\"textPurple\":\"tasks_textPurple__2nfps\",\"list\":\"tasks_list__2LD5g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"task_task__2hG3_\",\"textCompleted\":\"task_textCompleted__1ZP7w\",\"checkContainer\":\"task_checkContainer__2FVHc\",\"deleteButton\":\"task_deleteButton__dYBM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"Profile_profileInfoBlock__15boR\",\"postBlock\":\"Profile_postBlock__3ovmJ\",\"profileAll\":\"Profile_profileAll__1WNBF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3CtDg\",\"userBlock\":\"users_userBlock__1io-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"todoheader_header__3PGk6\",\"newTaskForm\":\"todoheader_newTaskForm__3K4gk\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.ae691311.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3CR-P\",\"h1\":\"Header_h1__EHKug\",\"img1\":\"Header_img1__tQK-J\",\"loginBlock\":\"Header_loginBlock__1W4gf\",\"head\":\"Header_head__2IlmK\"};","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>News section</div>\r\n    )\r\n}\r\n\r\nexport default News;","import { InferActionsType } from \"./redux-store\";\r\n\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    \r\n    messagesData: [\r\n        {id: 1, message: 'Hi'}, \r\n        {id: 2, message: 'How is your'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ] as Array<MessageType>,\r\n    \r\n    dialogsData: [\r\n        {id: 1, name: 'Nikita'}, \r\n        {id: 2, name: 'Stas'},\r\n        {id: 3, name: 'Gena'},\r\n        {id: 4, name: 'Turbo'},\r\n        {id: 5, name: 'Dusha'}\r\n    ] as Array<DialogType>\r\n};\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/dialogs/SEND_MESSAGE': //Если тип acion = SEND_MESSAGE\r\n            let body = action.newMessageBody; //Присваиваем значение переменной сообщения\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}]//Пушим в стейт новое сообщение\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type : 'SN/dialogs/SEND_MESSAGE', newMessageBody} as const)\r\n}\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsType<typeof actions>","import React, { FC } from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem: FC<PropsType> = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React, { FC } from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React, { FC } from \"react\"\r\nimport { Field, WrappedFieldProps } from \"redux-form\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport { FieldValidatorType } from \"../../../utils/validators/validators\"\r\nimport { WrappedFieldMetaProps } from \"redux-form/lib/Field\"\r\nimport { Checkbox, Input } from 'antd';\r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    // child: any\r\n    // input: string\r\n    children: any\r\n}\r\n\r\n\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta:{touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const TextArea: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <Input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport const InputForm: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><Input {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const CheckBoxForm: FC<WrappedFieldProps> = (props) => {\r\n    //const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}><Checkbox {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined, \r\n                            name: FormKeysType, \r\n                            component: FC<WrappedFieldProps>, \r\n                            validate: Array<FieldValidatorType>, \r\n                            props = {}, \r\n                            text = \"\") {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validate} {...props} /> {text}\r\n    </div>\r\n}\r\n\r\n\r\nexport type GetStringKeys<T> = Extract<keyof T, string>","export type FieldValidatorType = (value: string) => string | undefined \r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n    if(value) {\r\n        return undefined    \r\n    } else {\r\n        return 'Field is required';\r\n    }\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n    if(value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`; \r\n    } else {\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React, { FC } from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { Navigate, NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { createField, TextArea } from \"../common/FormControl/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\";\r\nimport { LoginFormValuesType, LoginFormValuesTypeKeys } from \"../Login/Login\";\r\n\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (messageText: string) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n\r\n    let dialogsElement = state.dialogsData\r\n        .map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/> ); \r\n        \r\n\r\n    let messageElement = state.\r\n    messagesData\r\n        .map( message => <Message message={message.message} key={message.id} />)\r\n\r\n\r\n    let addNewMessage = (values: NewMessageFormValuesType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n        \r\n    return (\r\n        <div className={s.dialogs}>\r\n           <div className={s.dialogsItems}>\r\n                {dialogsElement}\r\n           </div>\r\n           <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage} />\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport type NewMessageValuesTypeKeys = Extract<keyof NewMessageFormValuesType, string>\r\ntype PropsType2 = {\r\n\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm: FC<InjectedFormProps<NewMessageFormValuesType, PropsType2> & PropsType2> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                {createField<NewMessageValuesTypeKeys>(\"Enter your message\", 'newMessageBody', TextArea, [required, maxLength50])}\r\n                {/* <Field component={TextArea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\"/> */}\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormValuesType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): mapStateToPropsforRedirectPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\ntype mapStateToPropsforRedirectPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n\r\nexport function withAuthRedirect(Component: React.ComponentType<mapStateToPropsforRedirectPropsType>)  {\r\n    class redirectComponent extends React.Component<mapStateToPropsforRedirectPropsType> {\r\n        render() {\r\n\r\n        \r\n        if(!this.props.isAuth) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Component {...this.props} />\r\n    }\r\n    }\r\n\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(redirectComponent);\r\n    \r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}\r\n\r\n","import axios from \"axios\"\r\nimport { ProfileType, UsersType } from \"../types/types\";\r\n\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"594301d4-5e10-4b5a-b5ad-6549ff84c6b9\"\r\n    }\r\n});\r\n\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UsersType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { actions } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps, {...actions}), withAuthRedirect)(Dialogs);","import React, { FC } from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Preloader: FC = () => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import { Input } from \"antd\";\r\nimport React, { ChangeEvent, FC, useEffect, useState } from \"react\";\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    className: any\r\n}\r\n\r\nconst ProfileStatusWithHooks: FC<PropsType> = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b> <span onClick={activateMode}>{props.status || '-----------'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <Input onChange={onStatusChange} autoFocus={true} onBlur={deactivateMode} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { FC } from \"react\"\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { createField, GetStringKeys, InputForm, TextArea } from \"../../common/FormControl/FormsControls\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../common/FormControl/FormsControls.module.css\"\r\nimport { ProfileType } from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\ntype ProfileTypeKeys = GetStringKeys<ProfileType>\r\n\r\nconst ProfieleDataForm: FC<InjectedFormProps<ProfileType, PropsType> & PropsType> = ({handleSubmit, profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.userDataBlock}>\r\n        <div>\r\n            <b>Full name</b>: {createField<ProfileTypeKeys>(\"Full name\", \"fullName\", InputForm, [])} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField<ProfileTypeKeys>(\"\", \"lookingForAJob\", InputForm, [], {type: \"checkbox\"})} \r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {createField<ProfileTypeKeys>(\"My professional skills\", \"lookingForAJobDescription\", TextArea, [])} \r\n        </div>\r\n        <div>\r\n            <b>About me</b>:  {createField<ProfileTypeKeys>(\"About me\", \"aboutMe\", TextArea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, InputForm, [])} </b> \r\n                </div>\r\n            }) } \r\n        </div>\r\n        <div><button>Save</button></div>\r\n            { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n//const ProfieleDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nconst ProfieleDataFormReduxForm = reduxForm<ProfileType, PropsType>({form: 'edit-profile'})(ProfieleDataForm)\r\n\r\nexport default ProfieleDataFormReduxForm;","import React, { ChangeEvent, FC, useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfieleDataForm from \"./ProfileDataForm\";\r\nimport { ContactsType, ProfileType } from \"../../../types/types\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport type { UploadProps } from 'antd';\r\nimport { Button, message, Upload } from 'antd';\r\n\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = ({updateStatus, profile, status, isOwner, savePhoto, saveProfile}) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false); \r\n\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n        <div className={s.titleText}>\r\n            <Title>\r\n                Profile user\r\n            </Title>\r\n        </div>\r\n        \r\n        \r\n        \r\n        <div className={s.photoBlock}>\r\n            <div className={s.avaBlockAll}>\r\n                <div className={s.avaBlock}>\r\n                    <img src={profile.photos.large || userPhoto}/>\r\n                </div>\r\n                <div className={s.chancheAva}>\r\n                    <label className={s.inputfile}>\r\n                        {isOwner && <input type={\"file\"} name={\"file\"} onChange={onMainPhotoSelected} /> }\r\n                        <span>Change photo</span>\r\n                    </label>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n            <div className={s.infoBlock}>\r\n\r\n                <ProfileStatusWithHooks className={s.statusBlock} status={status != null ? status : \"User is not has status\"} updateStatus={updateStatus} />\r\n\r\n\r\n                {editMode \r\n                    ? <ProfieleDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> \r\n                    : <ProfieleData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/> }\r\n                \r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfieleData: FC<ProfileDataPropsType> = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.userDataBlock}>\r\n        \r\n        <div>\r\n            <b>Full name</b>: {profile.fullName} \r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"} \r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription} \r\n            </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe} \r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={(key)} contactTitile={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            }) } \r\n        </div>\r\n        {isOwner && <div><Button onClick={goToEditMode}>Edit</Button></div>}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\ntype ContactsPropsType = {\r\n    contactTitile: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: FC<ContactsPropsType> = ({contactTitile, contactValue}) => {\r\n    return(\r\n        <div className={s.contact}>\r\n            <b>{contactTitile}</b>: {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React, { FC } from \"react\";\r\nimport { ParentComponent } from \"./Carousel/parentCarousel\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { ProfileType } from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    updateStatus: (status: string) => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return (\r\n    <div className={s.profileAll}>\r\n        <div className={s.profileInfoBlock}>\r\n            <ProfileInfo profile={props.profile} \r\n                        status={props.status} \r\n                        updateStatus={props.updateStatus} \r\n                        isOwner={props.isOwner} \r\n                        savePhoto={props.savePhoto} \r\n                        saveProfile={props.saveProfile}/>\r\n        </div>\r\n        <div className={s.postBlock}>\r\n            {/* <MyPostsContainer /> */}\r\n            {/* <div className={s.carouselBlock}>\r\n                <h2>Photos</h2>\r\n                <ParentComponent/>\r\n            </div> */}\r\n        </div>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { APIResponseType, instance } from \"./api\";\r\nimport { PhotosType, ProfileType } from \"../types/types\";\r\n\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res => res.data);\r\n    },\r\n    updateStatus(status: string){\r\n        return instance.put<APIResponseType>(`profile/status`, {\r\n            status: status\r\n        }).then(res => res.data);\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data);\r\n    }\r\n}","import { act } from \"react-dom/test-utils\";\r\nimport { FormAction, stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/profile-api\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { PhotosType, PostType, ProfileType } from \"../types/types\";\r\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n            \r\n    postsData: [\r\n        {id: 1, message: 'Firts post example', count:12}, \r\n        {id: 2, message: 'Second post example', count:44},\r\n        {id: 2, message: 'Third post example', count:34}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    newPostText: \"\"\r\n};\r\n\r\n\r\n\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch(action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                count: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case 'SN/PROFILE/SET_USER_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        }\r\n\r\n        default: \r\n            return state;\r\n            \r\n            \r\n    }\r\n\r\n}\r\n\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_USER_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status: status} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos: photos} as const)\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setUserProfile(data));\r\n}\r\n\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status);\r\n    if(data.resultCode  === 0){\r\n        dispatch(actions.setStatus(status));\r\n    }   \r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file);\r\n    if(data.resultCode  === 0){\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    }   \r\n}\r\n\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const data = await profileAPI.saveProfile(profile);\r\n    if(data.resultCode  === 0){\r\n        if(userId != null) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            throw new Error (\"userId can`t be null\")\r\n        }\r\n    } else {\r\n        let error = data.messages[0];\r\n        let errorObj: any = {'_error': error};\r\n        let match =  error.match(/Invalid url format \\(Contacts->(.+)\\)/);\r\n        if (match) {\r\n            let fieldName = match[1].toLowerCase()\r\n            errorObj = { 'contacts': {}}\r\n            errorObj.contacts[fieldName] = error\r\n        }\r\n        //dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        //return Promise.reject(response.data.messages[0]);\r\n        dispatch(stopSubmit(\"edit-profile\", errorObj))  \r\n        throw error;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsType = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport { Navigate, useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { ProfileType } from \"../../types/types\";\r\n\r\nexport function withRouter(Children: any) {\r\n    return (props: any) => {\r\n        const router = {params: useParams()};\r\n        return <Children {...props} router={router}/>\r\n    }\r\n}\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void \r\n    updateStatus: (status: string) => void \r\n    savePhoto: (file: File) => void \r\n    saveProfile: (profile: ProfileType) => Promise<any> \r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n    router: any\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & PathParamsType\r\n\r\nclass ProfileContainer extends React.PureComponent<PropsType> {\r\n\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.router.params.userId;\r\n\r\n\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            // if(!userId){\r\n            //     this.props.history.push(\"/login\");\r\n            // }\r\n        }\r\n\r\n        if(!userId) {\r\n            console.error(\"Id should exists\")\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType) {\r\n        if(this.props.router.params.userId != prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} \r\n                isOwner={!this.props.router.params.userId} \r\n                savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\"\r\nimport { instance, APIResponseType, ResultCodeForCaptchaEnum, ResultCodesEnum } from \"./api\"\r\n\r\n\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {\r\n            email, password, rememberMe, captcha\r\n        }).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","import { instance } from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data);\r\n    }\r\n}","import { FormAction, stopSubmit } from \"redux-form\";\r\nimport { ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\";\r\nimport { authAPI } from \"../api/auth-api\";\r\nimport { securityAPI } from \"../api/security-api\";\r\nimport { BaseThunkType, InferActionsType } from \"./redux-store\";\r\nimport { Action } from \"redux\";\r\n\r\n\r\n\r\n\r\n// export type InitialStateType2 = {\r\n//     userId: number | null\r\n//     email: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n//     captchaUrl: string | null\r\n// }\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\n\r\n\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/auth/SET_USER_DATA':\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string  | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'SN/auth/SET_USER_DATA', \r\n        payload: {userId, email, login, isAuth}\r\n    } as const),\r\n\r\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\r\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS',\r\n        payload: {captchaUrl}\r\n    } as const)\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    let meData = await authAPI.me();\r\n    if(meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let loginData = await authAPI.login(email, password, rememberMe, captcha);\r\n        if(loginData.resultCode === ResultCodesEnum.Success) {\r\n            dispatch(getAuthUserData())\r\n        } else {    \r\n            if(loginData.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = data.url;\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n\r\n    \r\n}\r\n\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(actions.setAuthUserData(null, null, null, false));\r\n        }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsType = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import React, { FC } from \"react\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { Field, InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { CheckBoxForm, createField, GetStringKeys, InputForm } from \"../common/FormControl/FormsControls\";\r\nimport { login } from \"../../redux/auth-reducer\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport style from \"../common/FormControl/FormsControls.module.css\"\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { Button } from \"antd\";\r\n\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\n\r\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = \r\n                    ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <div className={style.userNameText}>Username: {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", InputForm, [required])}</div>\r\n                <div className={style.passwordText}>Password: {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", InputForm, [required], {type: \"password\"})}</div>\r\n                <div className={style.rememberMeText}>Remember me{createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", CheckBoxForm, [], {type: \"checkbox\"})}</div>\r\n\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", InputForm, [required], {} )}\r\n\r\n                { error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div className={style.buttonLogin1}>\r\n                    <button className={style.buttonLogin}>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\n\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type LoginFormValuesTypeKeys = GetStringKeys<LoginFormValuesType>\r\n\r\n\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const captchaUrl = useSelector( (state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector( (state: AppStateType) => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch<any>(login(formData.email, formData.password, formData.rememberMe, formData.captcha));\r\n    }\r\n\r\n    if(isAuth) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1 className={style.loginHead}>Login</h1>\r\n            <div className={style.loginForm}>\r\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { type } from \"os\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\nimport { InferActionsType } from \"./redux-store\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsType = InferActionsType<typeof actions>\r\n\r\nexport const appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise]).then(() => {\r\n        dispatch(actions.initializedSuccess());\r\n    });\r\n\r\n}","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport s from './BookSection.module.css'\r\n\r\nconst HeaderBookSection = ({search, searchBook, searchBookEnter, setSearch}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={s.header}>\r\n                    <div className={s.search}>\r\n                        <p>Find your book:</p>\r\n                        <input type=\"text\" placeholder=\"Enter your book name\"\r\n                        value={search} onChange={e => setSearch(e.target.value)}\r\n                        onKeyPress={searchBookEnter}/>\r\n                        <button onClick={searchBook}>Search</button>\r\n                    </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderBookSection;","import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport s from './BookSection.module.css'\r\n\r\nconst BookList = ({book}) => {\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    const navigate = useNavigate();\r\n    //console.log(book);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {\r\n                book.map((item) => {\r\n                    // console.log(item.id);\r\n                    let bookid = item.id;\r\n                    let thumbnail = item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.smallThumbnail;\r\n                    let title = item.volumeInfo.title;\r\n                    let author = item.volumeInfo.authors;\r\n                    let categories = item.volumeInfo.categories;\r\n                    if(thumbnail !== undefined && title !== undefined && author != undefined && categories !== undefined) {\r\n                        return (\r\n                            <>\r\n                            <div className={s.card} key={item.id}>\r\n                            \r\n                                <img src={thumbnail} alt=\"\" \r\n                                onClick={() => navigate(`${bookid}`, {state: bookid})}\r\n                                />\r\n                                <div className={s.bottom}>\r\n                                    <p className={s.categories}>{categories}</p>\r\n                                    <h3 className={s.title}>{title}</h3>\r\n                                    <p className={s.author}>{author}</p>\r\n                                </div>\r\n                            </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    \r\n                })\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookList;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport s from './BookDetails.module.css'\r\n\r\nconst BookDetails = () => {\r\n\r\n    const {id} = useParams();\r\n    const [bookId, setBookId] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    console.log(id);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://www.googleapis.com/books/v1/volumes/${id}?key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg`)\r\n            .then(res => res.json())\r\n            .then(data => setBookId(data))\r\n    }, [id]);\r\n\r\n\r\n    if(bookId == null) return 'Loading...'\r\n    let description = bookId.volumeInfo.description;\r\n    let photobook = bookId.volumeInfo.imageLinks.smallThumbnail;\r\n    let title = bookId.volumeInfo.title;\r\n    let author = bookId.volumeInfo.authors;\r\n    let publishedDate = bookId.volumeInfo.publishedDate;\r\n    return (\r\n        <div className={s.bookContainer}>\r\n            <div className={s.headerDetailsBlock}>\r\n                <img src={photobook} alt=\"\" />\r\n                <div className={s.headerDetailsBlockText}>\r\n                    <h2>{title}</h2>\r\n                    <p>Автор: {author}</p>\r\n                    <span>Дата публикации: {publishedDate}</span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>Описание:</div>\r\n                <p>{description}</p>\r\n            </div>\r\n            <button onClick={() => navigate('/sectionbook')}>Back</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BookDetails;","import React, {useState} from \"react\";\r\nimport s from './BookSection.module.css'\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport HeaderBookSection from \"./HeaderBookSection\";\r\nimport BookList from \"./BookList\";\r\nimport BookDetails from \"./BookDetails\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\n\r\nconst BookSection = (props) => {\r\n\r\n    const [search, setSearch] = useState(\"\");\r\n    const [bookData, setData] = useState([]);\r\n\r\n    const searchBookEnter = (evt) => {\r\n        if (evt.key === \"Enter\"){\r\n            axios.get('https://www.googleapis.com/books/v1/volumes?q='+search+'&key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg'+'&maxResults=30')\r\n            .then(res=> setData(res.data.items))\r\n            .catch()\r\n        }\r\n    }\r\n\r\n    const searchBook = (evt) => {\r\n        if(evt.key === \"Enter\" || true)\r\n        axios.get('https://www.googleapis.com/books/v1/volumes?q='+search+'&key=AIzaSyAwktWtvmX4Vq55gqVsJL5T1aU9ZaQzzCg'+'&maxResults=30')\r\n            .then(res=> setData(res.data.items))\r\n            .catch()\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <div className={s.booksection}>\r\n            <HeaderBookSection search={search} searchBook={searchBook} searchBookEnter={searchBookEnter} setSearch={setSearch}/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<BookList book={bookData}/>} />\r\n                <Route path=\"/:id\" element={<BookDetails />} />\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default compose(withAuthRedirect)(BookSection);","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n\r\nexport const getPageSizeSelector = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPageSelector = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetchingSelector = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgressSelector = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, { useState, FC } from \"react\";\r\n// import styles from './Paginator.module.css';\r\nimport styles from './Paginator.module.css';\r\nimport cn from 'classnames';\r\nimport { Button } from \"antd\";\r\n\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: FC<PropsType>  = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil (totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightProtionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.pages}>\r\n        \r\n\r\n        <div className={styles.pages}>\r\n        { portionNumber > 1 && <Button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</Button> }\r\n            {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<= rightProtionPageNumber)\r\n            .map((p) => {\r\n                return <Button className={ cn ({[styles.selectedPage]: currentPage === p}, styles.pageNumber)}\r\n                // {( currentPage === p && styles.selectedPage )} \r\n                 key={p} onClick={(e)=> {onPageChanged(p)}} >{p}</Button>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <Button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</Button>}\r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import axios from \"axios\";\r\nimport React, { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport styles from './users.module.css';\r\nimport { UsersType } from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    unfollow: (userid: number) => void\r\n    follow: (userid: number) => void\r\n}\r\n\r\n\r\nconst User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n\r\n    return (\r\n        <div className={styles.userBlock}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    { user.followed ? \r\n                        <button disabled={followingInProgress.\r\n                            some(id => id === user.id)} \r\n                                /*onClick={ () => {unfollow(user.id)}}*/>\r\n                                    Unfollow</button> \r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} \r\n                                /*onClick={ () => {follow(user.id)}}*/>\r\n                                Follow</button>}\r\n                    \r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.id}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React, { FC } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { FilterType } from \"../../redux/users-reducer\";\r\n\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: any //\"true\" | \"false\" | \"null\"\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: FC<PropsType> = React.memo((props) => {\r\n\r\n    \r\n\r\n    const submit = (values: FormType, { setSubmitting }: {setSubmitting: (isSubmiting: boolean) => void} ) => {\r\n\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter);\r\n        setSubmitting(false);    \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n    <Formik\r\n       initialValues={{ term: '', friend: 'null'}}\r\n       validate={usersSearchFormValidate}\r\n       onSubmit={submit}\r\n     >\r\n       {({ isSubmitting }) => (\r\n         <Form>\r\n           <Field type=\"text\" name=\"term\" />\r\n           <Field name=\"friend\" as=\"select\">\r\n                <option value=\"null\">All</option>\r\n                <option value=\"true\">Followed</option>\r\n                <option value=\"false\">Undollowed</option>\r\n           </Field>\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Search\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n        </div>\r\n    )\r\n})","import { AxiosPromise } from \"axios\";\r\nimport { GetItemsType, APIResponseType, instance } from \"./api\";\r\n\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number, term: string = '', friend: null | boolean = null) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? '' : `&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data;\r\n        });\r\n    },\r\n    follow(userid: number) {\r\n        return instance.post<APIResponseType>(`follow/${userid}`).then(res => res.data)\r\n    },\r\n    unfollow(userid: number) {\r\n        return instance.delete(`follow/${userid}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n        \r\n}","import { Dispatch } from \"redux\";\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { PhotosType, UsersType } from \"../types/types\";\r\nimport { AppStateType, BaseThunkType, InferActionsType } from \"./redux-store\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { APIResponseType } from \"../api/api\";\r\n\r\n\r\n\r\n// const FOLLOW = 'FOLLOW';\r\n// const UNFOLLOW = 'UNFOLLOW';\r\n// const SET_USERS = 'SET_USERS';\r\n// const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n// const SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n// const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n// const TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    users: [ ] as Array<UsersType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>, // array of users id`s: number\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean \r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst usersReduser = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/USERS/FOLLOW': \r\n            return {\r\n                ...state, \r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'SN/USERS/UNFOLLOW': \r\n            return {\r\n                ...state,\r\n                users: state.users.map (u => {\r\n                    if (u.id === action.userid) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                } )\r\n            }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return  {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/USERS/SET_FILTER': {\r\n            return  {...state, filter: action.payload}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return  {...state, totalUsersCount: action.count}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return  {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {...state, followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userid] \r\n                : state.followingInProgress.filter(id => id != action.userid)}\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const actions = {\r\n    followSuccess: (userid: number) => (\r\n        {type: 'SN/USERS/FOLLOW', userid} as const\r\n    ),\r\n    \r\n    unfollowSuccess: (userid: number) => (\r\n        {type: 'SN/USERS/UNFOLLOW', userid} as const\r\n    ),\r\n    \r\n    setUsers: (users: Array<UsersType>) => (\r\n        {type: 'SN/USERS/SET_USERS', users} as const\r\n    ),\r\n    \r\n    setCurrentPage: (currentPage: number) => (\r\n        {type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const\r\n    \r\n    ),\r\n\r\n    setFilter: (filter: FilterType) => (\r\n        {type: 'SN/USERS/SET_FILTER', payload: filter} as const\r\n    \r\n    ),\r\n    \r\n    setTotalUsersCount: (totalUsersCount: number) => (\r\n        {type: 'SN/USERS/SET_TOTAL_USERS_COUNT', count: totalUsersCount} as const\r\n    ),\r\n    \r\n    toggleIsFetching: (isFetching: boolean) => (\r\n        {type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const\r\n    ),\r\n    \r\n    toggleFollowingProgress: (isFetching: boolean, userid: number) => (\r\n        {type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userid} as const\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: FilterType): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n    \r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setFilter(filter));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n        dispatch(actions.setCurrentPage(currentPage));\r\n    }\r\n}\r\n\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, userid: number, apiMethod: (userid: number) => Promise<APIResponseType>, \r\n                                    actionCreator: (userid: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userid));\r\n\r\n    let data = await apiMethod(userid);\r\n    if(data.resultCode === 0){\r\n        dispatch(actionCreator(userid));\r\n    }\r\n\r\n    dispatch(actions.toggleFollowingProgress(false, userid));\r\n}\r\n\r\n\r\n\r\n\r\nexport const follow = (userid: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n       await _followUnfollowFlow(dispatch, userid, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userid: number): ThunkType => {\r\n\r\n    return async (dispatch) => {\r\n       await _followUnfollowFlow(dispatch, userid, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReduser;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type FilterType = typeof initialState.filter;\r\n\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>","import axios from \"axios\";\r\nimport React, { FC, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport styles from './users.module.css';\r\nimport { UsersType } from \"../../types/types\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { UsersSearchForm } from \"./UsersSearchForm\";\r\nimport { FilterType, getUsers } from \"../../redux/users-reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCurrentPageSelector, getFollowingInProgressSelector, getPageSizeSelector, getTotalUsersCountSelector, getUsersFilter, getUsersSelector } from \"../../redux/users-selectors\";\r\n\r\ntype PropsType = {\r\n    //pageSize: number\r\n    //currentPage: number,\r\n    //onPageChanged: (pageNumber: number) => void\r\n    //onFilterChanged: (filter: FilterType) => void\r\n    //users: Array<UsersType>\r\n    //followingInProgress: Array<number>\r\n    //unfollow: (userid: number) => void\r\n    //follow: (userid: number) => void\r\n}\r\n\r\nexport const Users: FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsersSelector)\r\n    const totalUsersCount = useSelector(getTotalUsersCountSelector)\r\n    const currentPage = useSelector(getCurrentPageSelector)\r\n    const pageSize = useSelector(getPageSizeSelector)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgressSelector)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch<any>(getUsers(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch<any>(getUsers(pageNumber, pageSize, filter));\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch<any>(getUsers(1, pageSize, filter))\r\n    }\r\n    \r\n    const follow = (userid: number) => {\r\n        dispatch<any>(follow(userid));\r\n    }\r\n\r\n    const unfollow = (userid: number) => {\r\n        dispatch<any>(unfollow(userid));\r\n    }\r\n\r\n    return <div>\r\n\r\n    <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n\r\n    <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n    <div>\r\n    {\r\n        users.map( u => <User user={u} key={u.id} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow}/>\r\n        )}\r\n    </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\n","import React, {FC} from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { follow, unfollow, getUsers, FilterType } from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\n\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { getCurrentPageSelector, getFollowingInProgressSelector, getIsFetchingSelector, getPageSizeSelector, getTotalUsersCountSelector, getUsersFilter, getUsersSelector } from \"../../redux/users-selectors\";\r\nimport { getStatus } from \"../../redux/profile-reducer\"; \r\nimport { UsersType } from \"../../types/types\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { Users } from \"./Users\";\r\n\r\n// type MapStatePropsType = {\r\n//     currentPage: number\r\n//     pageSize: number\r\n//     isFetching: boolean\r\n//     totalUsersCount: number\r\n//     users: Array<UsersType>\r\n//     followingInProgress: Array<number>\r\n//     filter: FilterType\r\n// }\r\n\r\n// type MapDispatchPropsType = {\r\n//     unfollow: (userid: number) => void\r\n//     follow: (userid: number) => void\r\n//     getUsers: (currentPage: number, pageSize: number, filter: FilterType) => void\r\n// }\r\n\r\n// type OwnPropsType = {\r\n//     pageTitle: string\r\n// }\r\n\r\n// type PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    pageTitle: string\r\n}\r\n\r\n\r\nexport const UsersPage: FC<UsersPagePropsType> = (withAuthRedirect, props) => {\r\n\r\n    const isFetching = useSelector(getIsFetchingSelector)\r\n\r\n    return <>\r\n    <h2>{props.pageTitle}</h2>\r\n    {isFetching ? <Preloader/> : null}\r\n     <Users //totalUsersCount={this.props.totalUsersCount} \r\n            //pageSize={this.props.pageSize}\r\n            //currentPage={this.props.currentPage}\r\n            //onPageChanged={onPageChanged}\r\n            //onFilterChanged={onFilterChanged}\r\n            //users={props.users}\r\n            //follow={props.follow}\r\n            //unfollow={props.unfollow}\r\n            //followingInProgress={props.followingInProgress}\r\n/>\r\n</>\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// let mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n \r\n//     return {\r\n//         users: getUsersSelector(state),\r\n//         pageSize: getPageSizeSelector(state),\r\n//         totalUsersCount: getTotalUsersCountSelector(state),\r\n//         currentPage: getCurrentPageSelector(state),\r\n//         isFetching: getIsFetchingSelector(state),\r\n//         followingInProgress: getFollowingInProgressSelector(state),\r\n//         filter: getUsersFilter(state)\r\n//     }\r\n// }\r\n\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userid) => {\r\n            dispatch(followAC(userid));\r\n        },\r\n        unfollow: (userid) => {\r\n            dispatch(unfollowAC(userid));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setUsersTotalCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n// export default compose<React.ComponentType>(\r\n//     withAuthRedirect,\r\n//     connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, \r\n//         {follow, unfollow, \r\n//             // setCurrentPage,   \r\n//             // toggleFollowingProgress, \r\n//             getUsers\r\n//         })\r\n// )(UsersContainer);","import { AppStateType } from \"./redux-store\";\r\n\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const selectCurrentUserLogin = (state: AppStateType) => {\r\n    return state.auth.login;\r\n}","import React, { FC } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport s from './Header.module.css';\r\nimport { Avatar, Button, Col, Row } from 'antd';\r\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\r\nimport { LaptopOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCurrentUserLogin, selectIsAuth } from \"../../redux/auth-selectors\";\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\nexport type MapPropsType = {\r\n}\r\n\r\n\r\nexport const Header: FC<MapPropsType> = (props) => {\r\n\r\n  const isAuth = useSelector(selectIsAuth);\r\n  const login = useSelector(selectCurrentUserLogin);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutCallback = () => {\r\n    dispatch<any>(logout())\r\n  }\r\n\r\n  const { Header} = Layout;\r\n  return (\r\n    <Header>\r\n        <Row>\r\n          <Col span={20}>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']} >\r\n              <div className={s.head}>\r\n                Social Network\r\n              </div>\r\n            </Menu>\r\n          </Col>\r\n          {isAuth ?\r\n            <>\r\n              <Col span={1}>\r\n                <Avatar alt={login || ''} style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />\r\n              </Col>\r\n              <Col span={2} style={{color: 'white'}}>\r\n                {login}\r\n              </Col>\r\n              <Col span={1}>\r\n                <Button onClick={logoutCallback}>Log out</Button>\r\n              </Col>\r\n            </>\r\n            : <Col span={4}>\r\n              <Button>\r\n                <NavLink to={'/login'}>Login</NavLink> \r\n              </Button>\r\n            </Col>}\r\n        </Row>\r\n      </Header>\r\n\r\n\r\n\r\n  // <header className={s.header}>\r\n  //   <img className={s.img1} src=\"https://img.freepik.com/premium-vector/logo-letter-sn_638109-16.jpg\"/>\r\n  //   <span className={s.h1}>Social network</span>  \r\n\r\n  //   <div className={s.loginBlock}>\r\n  //     {props.isAuth ? <div>\r\n  //       <div>{props.login}</div> \r\n  //         <button onClick={props.logout}>Log out</button>\r\n  //       </div>\r\n  //       :<NavLink to={'/login'}>Login</NavLink> }\r\n  //   </div>\r\n  // </header>\r\n  )\r\n}","import { Button, Form, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport s from \"./todoheader.module.css\"\r\nimport {AiOutlinePlusCircle} from 'react-icons/ai'\r\n\r\nexport function Header( {onAddTask} ) {\r\n    const [title, setTitle] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        onAddTask(title);\r\n        setTitle('');\r\n    }\r\n\r\n    function onChangeTitlt(event) {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.header}>\r\n            <h2>To do list</h2>\r\n            <form onSubmit={handleSubmit} className={s.newTaskForm}>\r\n                <input placeholder=\"Add task\" type=\"text\" value={title} onChange={onChangeTitlt}/>\r\n                <button>\r\n                    Create\r\n                    <AiOutlinePlusCircle size={20} />\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./task.module.css\"\r\nimport {TbTrash} from 'react-icons/tb'\r\nimport {BsFillCheckCircleFill} from 'react-icons/bs'\r\n\r\nexport function Task({task, onComplete, onDelete}) {\r\n\r\n    return (\r\n        <div className={s.task}>\r\n            <button className={s.checkContainer} onClick={() => onComplete(task.id)}>\r\n                {task.isComplited ? <BsFillCheckCircleFill /> : <div/>}\r\n            </button>\r\n\r\n            <p className={task.isComplited ? s.textCompleted : \"\"}>{task.title}</p>\r\n\r\n            <button className={s.deleteButton} onClick={() => onDelete(task.id)}>\r\n                <TbTrash size={20}/>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./tasks.module.css\"\r\nimport { Task } from \"../Task/Task\";\r\n\r\nexport function Tasks( {tasks, onComplete, onDelete} ) {\r\n    const tasksQuantity = tasks.length;\r\n    const comletedTask = tasks.filter(task => task.isComplited).length;\r\n\r\n    return (\r\n        <section className={s.tasks}>\r\n            <header className={s.header}>\r\n                <div>\r\n                    <p>Create task</p>\r\n                    <span>{tasksQuantity}</span>\r\n                </div>\r\n                <div>\r\n                    <p className={s.textPurple}>Complited</p>\r\n                    <span>{comletedTask} of {tasksQuantity}</span>\r\n                </div>\r\n            </header>\r\n\r\n            <div className={s.list}>\r\n                {tasks.map(task => (\r\n                    <Task key={task.id} task={task} onComplete={onComplete} onDelete={onDelete}/>\r\n                ))}\r\n                \r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Header } from \"./Header/TodoHeader\";\r\nimport { Tasks } from \"./Tasks/TaskList\";\r\nimport { withAuthRedirect } from \"../../api/hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst LOCAL_STORAGE_KEY = \"todo:savedTasks\"\r\n\r\nconst Todolist = (props) => {\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    function loadSavedTasks() {\r\n        const saved = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n        if(saved){\r\n            setTasks(JSON.parse(saved));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadSavedTasks();\r\n    }, [])\r\n\r\n    function setTasksAndSaved(newTask) {\r\n        setTasks(newTask);\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(newTask));\r\n    }\r\n\r\n\r\n    function addTask(taskTitle) {\r\n        setTasksAndSaved([\r\n            ...tasks,\r\n            {\r\n                id: Date.now(),\r\n                title: taskTitle,\r\n                isComplited: false\r\n            }\r\n        ]);\r\n    }\r\n\r\n    function deleteTaskById(taskId) {\r\n        const newTasks = tasks.filter(task => task.id !== taskId);\r\n        setTasksAndSaved(newTasks);\r\n    }\r\n\r\n    function toggleTaskCompletedById(taskId) {\r\n        const newTask = tasks.map(task => {\r\n            if(task.id === taskId) {\r\n                return {\r\n                    ...task,\r\n                    isComplited: !task.isComplited\r\n                }\r\n            }\r\n            return task;\r\n        });\r\n\r\n        setTasksAndSaved(newTask);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header onAddTask={addTask}/>\r\n            <Tasks tasks={tasks} onComplete={toggleTaskCompletedById} onDelete={deleteTaskById}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default compose(withAuthRedirect)(Todolist);","import './App.css';\n//import 'antd/dist/reset.css'\n//import Header from './сomponents/Header/Header';\nimport Navbar from './сomponents/Navbar/Navbar';\nimport News from './сomponents/News/News';\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport React from 'react';\n//import store, { updateNewPostText } from './redux/store';\nimport DialogsContainer from './сomponents/Dialogs/DialogsContainer';\n//import UsersContainer from './сomponents/Users/UsersContainer';\nimport ProfileContainer, { withRouter } from './сomponents/Profile/ProfileContainer';\n//import HeaderContainer from './сomponents/Header/HeaderContainer';\nimport {Login} from './сomponents/Login/Login';\nimport { connect } from 'react-redux';\nimport {getAuthUserData} from \"./redux/auth-reducer\"\nimport { compose } from 'redux';\nimport {initializeApp} from \"./redux/app-reducer\"\nimport Preloader from './сomponents/common/preloader/Preloader';\nimport BookSection from './сomponents/Book section/BookSection';\nimport { AppStateType } from './redux/redux-store';\nimport { UsersPage } from './сomponents/Users/UsersContainer';\n\nimport s from '../src/сomponents/Navbar/Navbar.module.css'\nimport { NavLink } from \"react-router-dom\";\nimport { LaptopOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport { Col, MenuProps, Row } from 'antd';\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\nimport MenuItem from 'antd/es/menu/MenuItem';\nimport { Avatar } from 'antd';\nimport { Header } from './сomponents/Header/Header';\nimport Todolist from './сomponents/ToDoList/Todolist';\n\nconst { Content, Footer, Sider } = Layout;\n\n\n\n\ntype MapPropsType = ReturnType<typeof mapStateToProps> \n\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n\n  componentDidMount() {\n    this.props.initializeApp();\n    // window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n\n  render() {\n\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n\n\n\n    return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Header />\n      <Content style={{ padding: '0 50px' }}>\n        <Layout style={{ padding: '24px 0'/*, background: colorBgContainer */}}>\n          <Sider style={{ /*background: colorBgContainer*/ minHeight: \"85vh\", maxHeight: \"85vh\"}} width={300}>\n            <Menu\n              mode=\"inline\"\n              //defaultSelectedKeys={['1']}\n              //defaultOpenKeys={['sub1']}\n              style={{ height: '100%'}}\n              /*items={items2}*/\n            >\n              <MenuItem key=\"1\" style={{fontSize: '20px' }}><NavLink to=\"/profile\">Profile</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/users\">Users</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/todolist\">To do list</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/sectionbook\">Book section</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/dialogs\">Message</NavLink></MenuItem>\n              <MenuItem style={{fontSize: '20px'}}><NavLink to=\"/news\">News</NavLink></MenuItem>\n            </Menu>\n\n            \n          </Sider>\n          \n          \n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\n          <Routes>\n            <Route path='/' element={<Navigate to=\"/profile\" />} />\n            <Route path='/profile' element={<ProfileContainer/>}>\n              <Route path=':userId' element={<ProfileContainer />} />\n            </Route>\n            <Route path='/dialogs' element={<DialogsContainer />} />\n            <Route path='/todolist' element={<Todolist/>} />\n            <Route path='/news' element={<News/>} />\n            <Route path='/users' element={ <UsersPage pageTitle={\"Clients social network\"}/> } />\n            <Route path='/login' element={ <Login/> } />\n            <Route path='/sectionbook' element={ <BookSection/> } >\n              <Route path=':id' element={<BookSection/>}/>\n            </Route>\n            <Route path='*' element={<div className='test1'>404 NOT FOUND</div>}/>\n          </Routes>\n          </Content>\n        </Layout>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Social Network ©2023 Created by Savodyarkin Nikita</Footer>\n    </Layout>\n\n\n\n\n    //<BrowserRouter>\n\n\n      /*<div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Routes>\n            <Route path='/' element={<Navigate to=\"/profile\" />} />\n            <Route path='/profile' element={<ProfileContainer/>}>\n              <Route path=':userId' element={<ProfileContainer />} />\n            </Route>\n            <Route path='/dialogs' element={<DialogsContainer />} />\n            <Route path='/news' element={<News/>} />\n            <Route path='/users' element={ <UsersPage pageTitle={\"Clients social network\"}/> } />\n            <Route path='/login' element={ <Login/> } />\n            <Route path='/sectionbook' element={ <BookSection/> } >\n              <Route path=':id' element={<BookSection/>}/>\n            </Route>\n            <Route path='*' element={<div>404 NOT FOUND</div>}/>\n          </Routes>\n        </div>\n      </div>*/\n\n\n    //</BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\n\nexport default  compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","let initialState = {};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {Action, applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReduser from \"./users-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport {appReducer} from \"./app-reducer\"\r\n\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReduser,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\nexport type InferActionsType<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>> \r\n\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root') as Element);\n  \nroot.render(\n  //<React.StrictMode>\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n  //</React.StrictMode>\n);\n\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBlock\":\"ProfileInfo_infoBlock__1ghbU\",\"userDataBlock\":\"ProfileInfo_userDataBlock__1NHi9\",\"photoBlock\":\"ProfileInfo_photoBlock__3Q1BA\",\"avaBlockAll\":\"ProfileInfo_avaBlockAll__2jpmr\",\"avaBlock\":\"ProfileInfo_avaBlock__38ev8\",\"chancheAva\":\"ProfileInfo_chancheAva__5Wbq8\",\"contact\":\"ProfileInfo_contact__2JpAd\",\"inputfile\":\"ProfileInfo_inputfile__1Trvv\",\"input-file\":\"ProfileInfo_input-file__Nowvr\",\"titleText\":\"ProfileInfo_titleText__EmbVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"BookSection_header__2UF0u\",\"headertext\":\"BookSection_headertext__2bERP\",\"search\":\"BookSection_search__1NI_m\",\"container\":\"BookSection_container__23p8v\",\"card\":\"BookSection_card__3jhfw\",\"bottom\":\"BookSection_bottom__4ZxlM\",\"title\":\"BookSection_title__1dCEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3J5tv\",\"error\":\"FormsControls_error__2FyOX\",\"formSummaryError\":\"FormsControls_formSummaryError__1FYg8\",\"loginForm\":\"FormsControls_loginForm__3GWcH\",\"loginHead\":\"FormsControls_loginHead__dHjJw\",\"buttonLogin\":\"FormsControls_buttonLogin__1hrcj\",\"buttonLogin1\":\"FormsControls_buttonLogin1__El3r4\",\"userNameText\":\"FormsControls_userNameText__1bmu-\",\"passwordText\":\"FormsControls_passwordText__2A3Rn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wmgq\",\"dialogsItems\":\"Dialogs_dialogsItems__3sRuA\",\"active\":\"Dialogs_active__ksLX2\",\"messages\":\"Dialogs_messages__1di5G\",\"message\":\"Dialogs_message__2EhZX\"};"],"sourceRoot":""}